//
//  YOAuthRequest.h
//  YOAuth
//
//  Created by Zach Graves on 2/14/09.
//  Copyright (c) 2009 Yahoo! Inc. All rights reserved.
//  
//  The copyrights embodied in the content of this file are licensed under the BSD (revised) open source license.
//

#import <Foundation/Foundation.h>

#import "YOAuthSignatureMethod.h"

@class YOAuthConsumer;
@class YOAuthToken;
@class YOAuthRequestParameter;

/**
 * YOAuthRequest is used to create a request and apply a signature. 
 * <p>It provides methods to extract the request parameters as a dictionary or as an Authorization header.</p>
 * @see http://oauth.net/core/1.0
 */
@interface YOAuthRequest : NSObject {
@protected
	/**
	 * Returns the receiver's OAuth consumer.
	 */
	YOAuthConsumer				*consumer;
	
	/**
	 * Returns the receiver's optional OAuth token.
	 */
	YOAuthToken					*token;
	
	/**
	 * Returns the receiver's optional OAuth realm used in Authorization header values.
	 */
	NSString					*realm;
	
	/**
	 * Returns the receiver's HTTP method for this request.
	 */
	NSString					*HTTPMethod;
	
	/**
	 * Returns the receiver's URL of this request.
	 */
	NSURL						*url;
	
	/**
	 * Returns receiver's dictionary of request parameters for this request.
	 */
	NSMutableDictionary			*requestParams;
	
	/**
	 * Returns the receiver's specified signature method.
	 */
	id<YOAuthSignatureMethod>	signatureMethod;
	
	/**
	 * Returns the receiver's OAuth request params generated by this class.
	 */
	NSMutableDictionary			*oauthParams;
	
	/**
	 * Returns the url-encoded <code>oauth_signature</code>.
	 * <p>May be nil if the request has not been prepared yet.
	 * @see http://oauth.net/core/1.0#signing_process
	 */
	NSString					*oauthSignature;
	
	/**
	 * Returns the generated <code>oauth_nonce</code>.
	 * @see http://oauth.net/core/1.0#nonce
	 */
	NSString					*oauthNonce;
	
	/**
	 * Returns the generated <code>oauth_version</code>.
	 */
	NSString					*oauthVersion;
	
	/**
	 * Returns the generated <code>oauth_timestamp</code>.
	 * <p>This value must be +-600 seconds of the current time.</p>
	 * @see http://oauth.net/core/1.0#timestamp
	 */
	NSString					*oauthTimestamp;
}

@property (nonatomic, readwrite, strong) YOAuthConsumer *consumer;
@property (nonatomic, readwrite, strong) YOAuthToken *token;
@property (nonatomic, readwrite, strong) NSString *realm;
@property (nonatomic, readwrite, strong) NSString *HTTPMethod;
@property (nonatomic, readwrite, strong) NSURL *url;
@property (nonatomic, readwrite, strong) NSMutableDictionary *requestParams;
@property (nonatomic, readwrite, strong) NSMutableDictionary *oauthParams;

@property (nonatomic, readwrite, strong) NSString *oauthSignature;
@property (nonatomic, readwrite, strong) NSString *oauthNonce;
@property (nonatomic, readwrite, strong) NSString *oauthVersion;
@property (nonatomic, readwrite, strong) NSString *oauthTimestamp;

/**
 * Returns an oauth request for the specified consumer, url, HTTP method and signature method to sign.
 * @param aConsumer			An OAuth consumer for this request.
 * @param aUrl				A URL for this request. A URL should not contain a query string.
 * @param aHTTPMethod		A HTTP method for this request.
 * @param aMethod			The name of a signature method to use in signing this request.
 * @return					The initialized request.
 */
- (id)initWithConsumer:(YOAuthConsumer *)aConsumer 
				andUrl:(NSURL *)aUrl 
		 andHTTPMethod:(NSString *)aHTTPMethod 
	andSignatureMethod:(NSString *)aMethod;

/**
 * Returns an oauth request for the specified consumer, url, HTTP method, token and signature method to sign.
 * @param aConsumer			An OAuth consumer for this request.
 * @param aUrl				A URL for this request. A URL should not contain a query string.
 * @param aHTTPMethod		A HTTP method for this request.
 * @param aToken			An OAuth token.
 * @param aMethod			The name of a signature method to use in signing this request.
 * @return					The initialized request.
 */
- (id)initWithConsumer:(YOAuthConsumer *)aConsumer 
				andUrl:(NSURL *)aUrl 
		 andHTTPMethod:(NSString *)aHTTPMethod 
			  andToken:(YOAuthToken *)aToken 
	andSignatureMethod:(NSString *)aMethod;

/**
 * Prepares the oauth request by setting all required OAuth parameters and building the signature.
 */
- (void)prepareRequest;

/**
 * Returns a dictionary of all request parameters along with generated OAuth parameters.
 * @return			A dictionary containing all the request parameters for this object.
 */
- (NSMutableDictionary *)allRequestParametersAsDictionary;

/**
 * Returns a dictionary of all the non OAuth request parameters.
 * @return			A dictionary containing non OAuth variables as key value pairs.
 */
- (NSMutableDictionary *)allNonOAuthRequestParametersAsDictionary;

/**
 * Returns a dictionary of all the generated OAuth request parameters.
 * @return			A dictionary containing OAuth variables as key value pairs.
 */
- (NSMutableDictionary *)allOAuthRequestParametersAsDictionary;

/**
 * Returns an OAuth Authorization header.
 * @return			An OAuth Authorization header usable in an URL request.
 */
- (NSString *)buildAuthorizationHeaderValue;


@end
